name: CI
on: [ push, pull_request ]

jobs:
  package-rpm:
    runs-on: ubuntu-18.04
    container: centos:7
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Yum
      id: cache-yum
      uses: actions/cache@v1
      with:
        path: /var/cache/yum/
        key: ${{ runner.os }}-yum

    - name: Setup Building
      run: scripts/build-setup

    - name: Build RPM
      run: scripts/build

    - name: Setup Signing
      run: scripts/sign-setup

    - name: Sign RPM
      run: scripts/sign
      env:
        PRIVATE_KEY: ${{ secrets.private_key }}
        PRIVATE_KEY_PASS_PHRASE: ${{ secrets.private_key_pass_phrase }}

    - name: Create Github Artifact
      uses: actions/upload-artifact@v1
      with:
        name: k3s-selinux
        path: dist/rpm/noarch/

  upload-rpm:
    if: startsWith( github.ref, 'refs/tags/' )
    needs: package-rpm
    runs-on: ubuntu-18.04
    container: centos:7

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download Github Artifact
      uses: actions/download-artifact@v1
      with:
        name: k3s-selinux
        path: dist/rpm/noarch/

    - name: Cache Yum
      id: cache-yum
      uses: actions/cache@v1
      with:
        path: /var/cache/yum/
        key: ${{ runner.os }}-yum
  
    - name: Cache Python
      id: cache-python
      uses: actions/cache@v1
      with:
        path: /var/cache/pip/
        key: ${{ runner.os }}-python

    - name: Setup Upload
      run: scripts/upload-repo-setup
  
    - name: Upload to Yum Repo
      run: scripts/upload-repo
      env:
        AWS_S3_BUCKET: ${{ secrets.aws_s3_bucket }}
        AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}

    - name: Set Github Asset Info
      id: artifact
      run: |
        rpm=$(ls -1 dist/rpm/noarch/*.rpm)
        tag=${GITHUB_REF#refs/tags/}
        echo ::set-output name=path::$rpm
        echo ::set-output name=name::$(basename $rpm)
        echo ::set-output name=type::application/x-rpm
        echo ::set-output name=tag::$tag
        echo ::set-output name=prerelease::$([[ $tag =~ ^[^-+]*- ]] && echo true)

    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: ${{ steps.artifact.outputs.prerelease }}
        release_name: ${{ steps.artifact.outputs.tag }}
        tag_name: ${{ steps.artifact.outputs.tag }}

    - name: Upload Github Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.artifact.outputs.path }}
        asset_name: ${{ steps.artifact.outputs.name }}
        asset_content_type: ${{ steps.artifact.outputs.type }}
